{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-55ae2794\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"id \"), /*#__PURE__*/_createElementVNode(\"th\", null, \"title\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"description\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"price\")])], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.things, thing => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: thing.id\n    }, [_hoisted_1, _createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, _toDisplayString(thing._id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(thing.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(thing.description), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEAICA,oBAQO,6BAPRA,oBAMK,0BALFA,oBAAY,YAAR,KAAG,gBACLA,oBAAc,YAAV,OAAK,gBACPA,oBAAoB,YAAhB,aAAW,gBACdA,oBAAc,YAAV,OAAK;;;2BANfC,oBA8BIC,6BA9BiBC,YAAM,EAAfC,KAAK;yBAAjBH,oBA8BI;MA9B0BI,GAAG,EAACD,KAAK,CAACE;QACzCC,UAQO,EAEPP,oBAgBO,gBAfPA,oBAaO,aAXPA,oBAEI,6BADII,KAAK,CAACI,GAAG,kBAEdR,oBAGM,6BAFFI,KAAK,CAACK,KAAK,kBAIdT,oBAEK,6BADFI,KAAK,CAACM,WAAW","names":["_createElementVNode","_createElementBlock","_Fragment","$data","thing","key","id","_hoisted_1","_id","title","description"],"sourceRoot":"","sources":["/home/kali/my-first-vue-cli-app/src/components/stuffFetch.vue"],"sourcesContent":["<template class=\"bg-secondary\">\n  \n  \n  <div v-for='thing in things' :key=thing.id>\n <thead>  \n<tr>\n   <th>id </th>\n     <th>title</th>\n       <th>description</th>\n        <th>price</th>\n\n</tr>\n</thead> \n \n <tbody> \n <tr>\n\n <td>\n      {{ thing._id}}\n</td>\n    <td>\n     {{ thing.title}}\n    \n     </td>\n\n     <td>\n     {{ thing.description}}\n     </td>\n   </tr>\n\n</tbody>\n   \n\n</div> \n\n\n\n\n\n</template>\n\n<script>\n\n  import {stuffService} from '@/_services'\n  \n   \n  export default {\n  \n  name: 'stuffFetch',\n  \n  data(){\n\n    return {\n        \n\n             things:[]\n\n    }\n  },\n\n     mounted() {\n\n       stuffService.getAllstuff()\n                                .then(res=>{\n\n                                  console.log(res.data.data)\n\n                                  this.things=res.data\n\n                                })\n                                  .catch(err=>{console.log(err)})\n   \n    \n    }\n        \n   \n          }\n           \n            \n             \n        \n          \n\n\n        \n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped >\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}