{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.stuffs, stuff => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: stuff.id\n    }, _toDisplayString(stuff.price), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createTextVNode(\" \" + _toDisplayString(), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gFACEA,oBAKIC,6BALkBC,YAAM,EAAhBC,KAAK;yBAAjBH,oBAKI;MAL2BI,GAAG,EAAED,KAAK,CAACE;wBACrCF,KAAK,CAACG,KAAK;mDAIZ,GAGN,qBAAE","names":["_createElementBlock","_Fragment","$data","stuff","key","id","price"],"sourceRoot":"","sources":["/home/kali/my-first-vue-cli-app/src/components/stuffFetch.vue"],"sourcesContent":["<template class=\"bg-secondary\">\n  <div v-for='stuff in  stuffs' :key='stuff.id'>\n    {{ stuff.price}}\n\n\n\n</div>\n\n\n{{}}\n\n\n</template>\n\n<script>\n\n  import {stuffService} from '@/_services'\n  \n   \n  export default {\n  \n  name: 'stuffFetch',\n  \n  data(){\n    return {\n      stuffs:[]\n    }\n  },\n\n     mounted() {\n\n       stuffService.getAllstuff()\n                                .then(res=>{\n\n                                  console.log(res.data.data)\n\n                                  this.stuffs=res.data.data\n\n                                })\n                                                        .catch(err=>{console.log(err)})\n   \n    \n    }\n        \n   \n          }\n           \n            \n             \n        \n          \n\n\n        \n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped >\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}